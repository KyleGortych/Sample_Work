#+TITLE: Org Export to HTML Example.
#+DESCRIPTION: Converts Emacs Org file to HTML
#+AUTHOR: Kyle Gortych
# #+EXPORT_FILE_NAME: for difrent dir path
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
# #+STYLE: <link rel="stylesheet" type="text/css" href="BLANK/stylesheet.css"/>
#+HTML_HEAD: <link rel="icon" href="wizard.png" type="image/png" />
#+PROPERTY: header-args :eval never-export
#+OPTIONS: num:nil

[[file: my-user-icon.png]]

#+BEGIN_CENTER
#+ATTR_HTML: :target _blank
[[https://github.com/KyleGortych][Author]]
#+END_CENTER

* Org Export
This is a paragraph for the first heading. In org mode it is converted to the appropriate tags. Org mode has lots of features. One of the features are snipits. Snippets are blocks of code in orgmode that allow one to run diffrent languages and even shells within one org document. This is usefull because, one org mode doc can essentially be included in a project with various languages and run them all interactively showing parts of the whole programs operation.

** This is a List
+ one
+ two
+ three

** Exporting
To export use 'SPACE-m-e' then 'h for HTML' 'last type h or o'.

** Examples of Snippets
One enables a snippet within an org doc by using...
+ Space-i-s or...
+ <s tab completion general snippet
+ #+begin-underscore-src language-name :exports both
+ #+end-underscore-src
+ C-c C-c runs

** Python example

#+begin_src python :exports both
def foo(x):
    if x>0:
        return x+1
    else:
        return x-1

return foo(5)
#+end_src

#+RESULTS:
: 6


** Rust example
This required a workaround. What was used, was a shell snippet to run another file. If a code snippet can't export a result due to lsp dependency along with the src, then running it in a shell snippet and exporting the result works as well. You can choose whether to include the shell snippet commands using :exports both or :exports results respectively. However compiled language snippets should export results in the usual manner. What might be happening is as it's exported, the snippet's lsp isn't added to the html.

#+begin_src rust
fn main() {
    println!("pi value is {}", get_pi());
}

fn get_pi() -> f64 {
    22.0 / 7.0
}
#+end_src

#+RESULTS:
: pi value is 3.142857142857143

#+begin_src sh :exports results
cd /Users/kylegortych/Main\ Directory/Text\ Editors\ test\ languages/Vim/Language\ tests/rust/print_pi
cargo run src/main.rs
#+end_src

#+RESULTS:
: pi value is 3.142857142857143

# html_head: <base target="_blank"> messes with toc

** Exporting references
The examples below will add spaces between each list or prevent opening link in a new tab which is undesirable.

Note this is an org code block which means escape characters must be used. The comma is used before the hash and plus sign. To have a link as plain text in an org code block specific to org syntax, use a zero width char by typing C-x 8 enter then type zero width char, lastly hit enter again making sure the cursor is in the correct position.

#+begin_src org
,#+html_head: <base target="_blank">

,#+ATTR_HTML: :target _blank
+ [[LINK]​[DESCRIPTION]]
,#+ATTR_HTML: :target _blank
+ [[LINK]​[DESCRIPTION]]

+ @@html:<p>txt <a href="url" target="_blank">link</a></p>@@
+ @@html:<p>txt <a href="url" target="_blank">link</a></p>@@

,#+begin_src html
<div>
    <ul>
        <li><p>txt <a href="url" target="_blank">link</a></p></li>
        <li><p>txt <a href="url" target="_blank">link</a></p></li>
    </ul>
</div>
,#+end_src
#+end_src

Here is the appropriate format
#+begin_src html

#+end_src

** References

#+BEGIN_EXPORT html
<div>
    <ul>
        <li><p>DT youtube ref <a href="https://www.youtube.com/watch?v=K6S-AKm5snc&t=141s " target="_blank">link</a></p></li>
        <li><p>Orgmode website <a href="https://orgmode.org/" target="_blank">link</a></p></li>
        <li><p>org export turorial <a href="https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html" target="_blank">link</a></p></li>
        <li><p>org turorial <a href="https://emacsclub.github.io/html/org_tutorial.html#sec-6-1" target="_blank">link</a></p></li>
        <li><p>distrotube's website <a href="https://distro.tube/index.html" target="_blank">link</a></p></li>
        <li><p>org code block escape char for links <a href="https://orgmode.org/manual/Escape-Character.html" target="_blank">link</a></p></li>
        <li><p>org export html <a href="https://orgmode.org/manual/Quoting-HTML-tags.html" target="_blank">link</a></p></li>
        <li><p>Icon created by Freepik - Flaticon <a href="https://www.flaticon.com/free-icons/wizard" title="wizard icons" target="_blank">wizard icon</a></p></li>
    </ul>
</div>
#+END_EXPORT
